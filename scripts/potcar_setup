#!/usr/bin/env python
# coding: utf-8
# Copyright (c) Pymatgen Development Team.
# Distributed under the terms of the MIT License.

from __future__ import print_function

import os
import glob
import shutil
import subprocess
from six.moves import input

def main():

    pspdir = ""

    count = 0
    while not os.path.exists(pspdir):
        if count != 0:
            print("Invalid vasp dir!")
        pspdir = input("Please enter full path where the POT_GGA_PAW_PBE, "
                       "etc. subdirs are present. If you obtained the PSPs "
                       "directly from VASP, this should typically be the "
                       "directory that you untar the files to : ")
        print("")

    targetdir = input("Please enter the fullpath of the where you want to "
                      "create your pymatgen resources directory: ")
    print("")

    os.makedirs(targetdir)
    print("Generating pymatgen resources directory...")

    NAME_MAPPINGS = {
        "potpaw_PBE": "POT_GGA_PAW_PBE",
        "potpaw_PBE_52": "POT_GGA_PAW_PBE_52",
        "potpaw_PBE_54": "POT_GGA_PAW_PBE_54",
        "potpaw_PBE.52": "POT_GGA_PAW_PBE_52",
        "potpaw_PBE.54": "POT_GGA_PAW_PBE_54",
        "potpaw_LDA": "POT_LDA_PAW",
        "potpaw_LDA.52": "POT_LDA_PAW_52",
        "potpaw_LDA.54": "POT_LDA_PAW_54",
        "potpaw_LDA_52": "POT_LDA_PAW_52",
        "potpaw_LDA_54": "POT_LDA_PAW_54",
        "potpaw_GGA": "POT_GGA_PAW_PW91"
    }

    for (parent, subdirs, files) in os.walk(pspdir):
        basename = os.path.basename(parent)
        basename = NAME_MAPPINGS.get(basename, basename)
        for subdir in subdirs:
            filenames = glob.glob(os.path.join(parent, subdir, "POTCAR*"))
            if len(filenames) > 0:
                try:
                    basedir = os.path.join(targetdir, basename)
                    if not os.path.exists(basedir):
                        os.makedirs(basedir)
                    fname = filenames[0]
                    dest = os.path.join(basedir, os.path.basename(fname))
                    shutil.copy(fname, dest)
                    ext = fname.split(".")[-1]
                    if ext.upper() in ["Z", "GZ"]:
                        subprocess.Popen(["gunzip", dest]).communicate()
                    elif ext.upper() in ["BZ2"]:
                        subprocess.Popen(["bunzip2", dest]).communicate()
                    if subdir == "Osmium":
                        subdir = "Os"
                    dest = os.path.join(basedir, "POTCAR.{}".format(subdir))
                    shutil.move(os.path.join(basedir, "POTCAR"), dest)
                    subprocess.Popen(["gzip", dest]).communicate()
                except Exception as ex:
                    print("An error has occured. Message is %s. Trying to "
                          "continue... " % str(ex))

    print("")
    print("PSP resources directory generated. You should now add the following to "
          "your environment.")
    print("export VASP_PSP_DIR={}".format(os.path.abspath(targetdir)))


if __name__ == "__main__":
    main()